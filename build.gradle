import groovy.json.JsonSlurper


repositories {
	ext.myRepos = {
            maven { url "https://mvnrepository.com/artifact" }
            maven { url "http://central.maven.org/maven2"}
            maven { url "http://clojars.org/repo"}

            maven {
                url "https://hub.spigotmc.org/nexus/content/groups/public/"
            }
            maven {
                url "http://repo.spongepowered.org/maven/"
            }
            maven {
                url "http://maven.cil.li/"
            }
    	}



    	repositories myRepos
}


buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "http://central.maven.org/maven2"}



    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

def getDate() {
    new Date().format('ddMMyy')
}
def getTime() {
    new Date().format('HHMM')
}


apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


def inputFile = new File("src/main/resources/mcmod.info")
def json = new JsonSlurper().parseText(inputFile.text)
def minecraftFVersion = "1.12.2-14.23.2.2654"


version='MC'+minecraftFVersion+'-'+json.getAt('version')+'-'+getDate().toString()+'-'+getTime().toString()
group = "com.redsparkle.foe" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Fallout_Equestria"


sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = minecraftFVersion
    runDir = "run"


    mappings = "snapshot_20171003"

}

dependencies {
//compile "li.cil.oc:OpenComputers:MC1.12.1-1.7.0.10+:api"
compile group: 'org.clojars.aseipp', name: 'jogg', version: '0.0.7'
compile group: 'org.clojars.aseipp', name: 'jorbis', version: '0.0.15'
compile group: 'com.googlecode.soundlibs', name: 'tritonus-share', version: '0.3.7.4'
compile group: 'com.googlecode.soundlibs', name: 'vorbisspi', version: '1.0.3.3'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}



shadowJar {
	dependencies {
			include dependency('org.clojars.aseipp:jogg')
			include dependency('org.clojars.aseipp:jorbis')
			include dependency('com.googlecode.soundlibs:tritonus-share')
			include dependency('com.googlecode.soundlibs:vorbisspi')
	}
	relocate 'com.jcraft.jorbis', 'com.jcraft.jorbis'
  relocate 'com.jcraft.jogg', 'com.jcraft.jogg'
  relocate 'org.tritonus', 'org.tritonus'
  relocate 'javazoom.spi', 'javazoom.spi'
  classifier ''
}

reobf {
    shadowJar {}
}

apply plugin: 'java'

dependencies {
    compile 'org.apache.httpcomponents:httpclient:4.3.3'
    compile fileTree(dir: 'lib', include: '*.jar')
    compile 'org.apache.directory.studio:org.dom4j.dom4j:1.6.1'
    compile 'jaxen:jaxen:1.1.4'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

configurations {
    ftpAntTask
}

dependencies {
    ftpAntTask("org.apache.ant:ant-commons-net:1.8.4") {
        module("commons-net:commons-net:1.4.1") {
            dependencies "oro:oro:2.0.8:jar"
        }
    }
}


task ftp() << {
    ant {
        taskdef(name: 'ftp',
                classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                classpath: configurations.ftpAntTask.asPath)


        def user = FTPUserName
        def pass = FTPPassword
        def dir = FTPdir
        def destination = "manage.fallout-equestria.tk"
        ftp(server: destination, userid: user, password: pass, remoteDir: dir,passive: "yes") {
            fileset(dir: "build/libs") {
            }
        }
    }
}
